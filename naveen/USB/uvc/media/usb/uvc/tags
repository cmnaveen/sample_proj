!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
DRIVER_AUTHOR	uvc_driver.c	/^MODULE_AUTHOR(DRIVER_AUTHOR);$/;"	v
DRIVER_AUTHOR	uvc_driver.c	30;"	d	file:
DRIVER_DESC	uvc_driver.c	/^MODULE_DESCRIPTION(DRIVER_DESC);$/;"	v
DRIVER_DESC	uvc_driver.c	32;"	d	file:
DRIVER_VERSION	uvc_driver.c	/^MODULE_VERSION(DRIVER_VERSION);$/;"	v
DRIVER_VERSION	uvcvideo.h	161;"	d
UVCIOC_CTRL_MAP32	uvc_v4l2.c	1361;"	d	file:
UVCIOC_CTRL_QUERY32	uvc_v4l2.c	1362;"	d	file:
UVC_BUF_STATE_ACTIVE	uvcvideo.h	/^	UVC_BUF_STATE_ACTIVE	= 2,$/;"	e	enum:uvc_buffer_state
UVC_BUF_STATE_DONE	uvcvideo.h	/^	UVC_BUF_STATE_DONE	= 4,$/;"	e	enum:uvc_buffer_state
UVC_BUF_STATE_ERROR	uvcvideo.h	/^	UVC_BUF_STATE_ERROR	= 5,$/;"	e	enum:uvc_buffer_state
UVC_BUF_STATE_IDLE	uvcvideo.h	/^	UVC_BUF_STATE_IDLE	= 0,$/;"	e	enum:uvc_buffer_state
UVC_BUF_STATE_QUEUED	uvcvideo.h	/^	UVC_BUF_STATE_QUEUED	= 1,$/;"	e	enum:uvc_buffer_state
UVC_BUF_STATE_READY	uvcvideo.h	/^	UVC_BUF_STATE_READY	= 3,$/;"	e	enum:uvc_buffer_state
UVC_CTRL_CONTROL_TIMEOUT	uvcvideo.h	170;"	d
UVC_CTRL_DATA_BACKUP	uvc_ctrl.c	29;"	d	file:
UVC_CTRL_DATA_CURRENT	uvc_ctrl.c	28;"	d	file:
UVC_CTRL_DATA_DEF	uvc_ctrl.c	33;"	d	file:
UVC_CTRL_DATA_LAST	uvc_ctrl.c	34;"	d	file:
UVC_CTRL_DATA_MAX	uvc_ctrl.c	31;"	d	file:
UVC_CTRL_DATA_MIN	uvc_ctrl.c	30;"	d	file:
UVC_CTRL_DATA_RES	uvc_ctrl.c	32;"	d	file:
UVC_CTRL_STREAMING_TIMEOUT	uvcvideo.h	171;"	d
UVC_DEBUGFS_BUF_SIZE	uvc_debugfs.c	25;"	d	file:
UVC_ENTITY_FLAG_DEFAULT	uvcvideo.h	277;"	d
UVC_ENTITY_IS_ITERM	uvcvideo.h	32;"	d
UVC_ENTITY_IS_OTERM	uvcvideo.h	35;"	d
UVC_ENTITY_IS_TERM	uvcvideo.h	31;"	d
UVC_ENTITY_IS_UNIT	uvcvideo.h	30;"	d
UVC_ENTITY_TYPE	uvcvideo.h	29;"	d
UVC_FMT_FLAG_COMPRESSED	uvcvideo.h	191;"	d
UVC_FMT_FLAG_STREAM	uvcvideo.h	192;"	d
UVC_GUID_FORMAT_BA81	uvcvideo.h	98;"	d
UVC_GUID_FORMAT_BG16	uvcvideo.h	110;"	d
UVC_GUID_FORMAT_BGR3	uvcvideo.h	125;"	d
UVC_GUID_FORMAT_BY8	uvcvideo.h	95;"	d
UVC_GUID_FORMAT_GB16	uvcvideo.h	113;"	d
UVC_GUID_FORMAT_GBRG	uvcvideo.h	101;"	d
UVC_GUID_FORMAT_GR16	uvcvideo.h	119;"	d
UVC_GUID_FORMAT_GRBG	uvcvideo.h	104;"	d
UVC_GUID_FORMAT_H264	uvcvideo.h	132;"	d
UVC_GUID_FORMAT_I420	uvcvideo.h	74;"	d
UVC_GUID_FORMAT_INVI	uvcvideo.h	153;"	d
UVC_GUID_FORMAT_INVZ	uvcvideo.h	147;"	d
UVC_GUID_FORMAT_INZI	uvcvideo.h	150;"	d
UVC_GUID_FORMAT_M420	uvcvideo.h	128;"	d
UVC_GUID_FORMAT_MJPEG	uvcvideo.h	59;"	d
UVC_GUID_FORMAT_NV12	uvcvideo.h	68;"	d
UVC_GUID_FORMAT_RG16	uvcvideo.h	116;"	d
UVC_GUID_FORMAT_RGBP	uvcvideo.h	122;"	d
UVC_GUID_FORMAT_RGGB	uvcvideo.h	107;"	d
UVC_GUID_FORMAT_RW10	uvcvideo.h	144;"	d
UVC_GUID_FORMAT_UYVY	uvcvideo.h	77;"	d
UVC_GUID_FORMAT_Y10	uvcvideo.h	86;"	d
UVC_GUID_FORMAT_Y12	uvcvideo.h	89;"	d
UVC_GUID_FORMAT_Y12I	uvcvideo.h	138;"	d
UVC_GUID_FORMAT_Y16	uvcvideo.h	92;"	d
UVC_GUID_FORMAT_Y8	uvcvideo.h	83;"	d
UVC_GUID_FORMAT_Y800	uvcvideo.h	80;"	d
UVC_GUID_FORMAT_Y8I	uvcvideo.h	135;"	d
UVC_GUID_FORMAT_YUY2	uvcvideo.h	62;"	d
UVC_GUID_FORMAT_YUY2_ISIGHT	uvcvideo.h	65;"	d
UVC_GUID_FORMAT_YV12	uvcvideo.h	71;"	d
UVC_GUID_FORMAT_Z16	uvcvideo.h	141;"	d
UVC_GUID_UVC_CAMERA	uvcvideo.h	43;"	d
UVC_GUID_UVC_MEDIA_TRANSPORT_INPUT	uvcvideo.h	49;"	d
UVC_GUID_UVC_OUTPUT	uvcvideo.h	46;"	d
UVC_GUID_UVC_PROCESSING	uvcvideo.h	52;"	d
UVC_GUID_UVC_SELECTOR	uvcvideo.h	55;"	d
UVC_HANDLE_ACTIVE	uvcvideo.h	/^	UVC_HANDLE_ACTIVE	= 1,$/;"	e	enum:uvc_handle_state
UVC_HANDLE_PASSIVE	uvcvideo.h	/^	UVC_HANDLE_PASSIVE	= 0,$/;"	e	enum:uvc_handle_state
UVC_MAX_CONTROL_MAPPINGS	uvcvideo.h	174;"	d
UVC_MAX_CONTROL_MENU_ENTRIES	uvcvideo.h	175;"	d
UVC_MAX_PACKETS	uvcvideo.h	166;"	d
UVC_MAX_STATUS_SIZE	uvcvideo.h	168;"	d
UVC_QUEUE_DISCONNECTED	uvcvideo.h	404;"	d
UVC_QUEUE_DROP_CORRUPTED	uvcvideo.h	405;"	d
UVC_QUIRK_BUILTIN_ISIGHT	uvcvideo.h	181;"	d
UVC_QUIRK_FIX_BANDWIDTH	uvcvideo.h	184;"	d
UVC_QUIRK_FORCE_Y8	uvcvideo.h	188;"	d
UVC_QUIRK_IGNORE_SELECTOR_UNIT	uvcvideo.h	183;"	d
UVC_QUIRK_PROBE_DEF	uvcvideo.h	185;"	d
UVC_QUIRK_PROBE_EXTRAFIELDS	uvcvideo.h	180;"	d
UVC_QUIRK_PROBE_MINMAX	uvcvideo.h	179;"	d
UVC_QUIRK_RESTORE_CTRLS_ON_INIT	uvcvideo.h	187;"	d
UVC_QUIRK_RESTRICT_FRAME_RATE	uvcvideo.h	186;"	d
UVC_QUIRK_STATUS_INTERVAL	uvcvideo.h	178;"	d
UVC_QUIRK_STREAM_NO_FID	uvcvideo.h	182;"	d
UVC_TERM_DIRECTION	uvcvideo.h	27;"	d
UVC_TERM_INPUT	uvcvideo.h	25;"	d
UVC_TERM_OUTPUT	uvcvideo.h	26;"	d
UVC_TRACE_CALLS	uvcvideo.h	614;"	d
UVC_TRACE_CAPTURE	uvcvideo.h	613;"	d
UVC_TRACE_CLOCK	uvcvideo.h	620;"	d
UVC_TRACE_CONTROL	uvcvideo.h	611;"	d
UVC_TRACE_DESCR	uvcvideo.h	610;"	d
UVC_TRACE_FORMAT	uvcvideo.h	612;"	d
UVC_TRACE_FRAME	uvcvideo.h	615;"	d
UVC_TRACE_PROBE	uvcvideo.h	609;"	d
UVC_TRACE_STATS	uvcvideo.h	619;"	d
UVC_TRACE_STATUS	uvcvideo.h	617;"	d
UVC_TRACE_SUSPEND	uvcvideo.h	616;"	d
UVC_TRACE_VIDEO	uvcvideo.h	618;"	d
UVC_URBS	uvcvideo.h	164;"	d
UVC_WARN_MINMAX	uvcvideo.h	622;"	d
UVC_WARN_PROBE_DEF	uvcvideo.h	623;"	d
UVC_WARN_XU_GET_RES	uvcvideo.h	624;"	d
_USB_VIDEO_H_	uvcvideo.h	3;"	d
__this_module	uvcvideo.mod.c	/^__visible struct module __this_module$/;"	v	typeref:struct:module
__used	uvcvideo.mod.c	/^__used$/;"	v	file:
__used	uvcvideo.mod.c	/^__used$/;"	v	typeref:struct:____versions	file:
__uvc_ctrl_add_mapping	uvc_ctrl.c	/^static int __uvc_ctrl_add_mapping(struct uvc_device *dev,$/;"	f	file:
__uvc_ctrl_commit	uvc_ctrl.c	/^int __uvc_ctrl_commit(struct uvc_fh *handle, int rollback,$/;"	f
__uvc_ctrl_get	uvc_ctrl.c	/^static int __uvc_ctrl_get(struct uvc_video_chain *chain,$/;"	f	file:
__uvc_find_control	uvc_ctrl.c	/^static void __uvc_find_control(struct uvc_entity *entity, __u32 v4l2_id,$/;"	f	file:
__uvc_query_ctrl	uvc_video.c	/^static int __uvc_query_ctrl(struct uvc_device *dev, __u8 query, __u8 unit,$/;"	f	file:
__uvc_query_v4l2_ctrl	uvc_ctrl.c	/^static int __uvc_query_v4l2_ctrl(struct uvc_video_chain *chain,$/;"	f	file:
__uvc_resume	uvc_driver.c	/^static int __uvc_resume(struct usb_interface *intf, int reset)$/;"	f	file:
active	uvcvideo.h	/^	atomic_t active;$/;"	m	struct:uvc_streaming
bControlSize	uvcvideo.h	/^			__u8  bControlSize;$/;"	m	struct:uvc_entity::__anon1::__anon2
bControlSize	uvcvideo.h	/^			__u8  bControlSize;$/;"	m	struct:uvc_entity::__anon1::__anon3
bControlSize	uvcvideo.h	/^			__u8  bControlSize;$/;"	m	struct:uvc_entity::__anon1::__anon5
bControlSize	uvcvideo.h	/^			__u8  bControlSize;$/;"	m	struct:uvc_entity::__anon1::__anon7
bControlSize	uvcvideo.h	/^	__u8 bControlSize;$/;"	m	struct:uvc_streaming_header
bEndpointAddress	uvcvideo.h	/^	__u8 bEndpointAddress;$/;"	m	struct:uvc_streaming_header
bFrameIndex	uvcvideo.h	/^	__u8  bFrameIndex;$/;"	m	struct:uvc_frame
bFrameIntervalType	uvcvideo.h	/^	__u8  bFrameIntervalType;$/;"	m	struct:uvc_frame
bNrInPins	uvcvideo.h	/^	__u8 bNrInPins;$/;"	m	struct:uvc_entity
bNumControls	uvcvideo.h	/^			__u8  bNumControls;$/;"	m	struct:uvc_entity::__anon1::__anon7
bNumFormats	uvcvideo.h	/^	__u8 bNumFormats;$/;"	m	struct:uvc_streaming_header
bStillCaptureMethod	uvcvideo.h	/^	__u8 bStillCaptureMethod;$/;"	m	struct:uvc_streaming_header
bTerminalLink	uvcvideo.h	/^	__u8 bTerminalLink;$/;"	m	struct:uvc_streaming_header
bTransportModeSize	uvcvideo.h	/^			__u8  bTransportModeSize;$/;"	m	struct:uvc_entity::__anon1::__anon3
bTriggerSupport	uvcvideo.h	/^	__u8 bTriggerSupport;$/;"	m	struct:uvc_streaming_header
bTriggerUsage	uvcvideo.h	/^	__u8 bTriggerUsage;$/;"	m	struct:uvc_streaming_header
baSourceID	uvcvideo.h	/^	__u8 *baSourceID;$/;"	m	struct:uvc_entity
bmCapabilities	uvcvideo.h	/^	__u8  bmCapabilities;$/;"	m	struct:uvc_frame
bmControls	uvcvideo.h	/^			__u8  *bmControls;$/;"	m	struct:uvc_entity::__anon1::__anon2
bmControls	uvcvideo.h	/^			__u8  *bmControls;$/;"	m	struct:uvc_entity::__anon1::__anon3
bmControls	uvcvideo.h	/^			__u8  *bmControls;$/;"	m	struct:uvc_entity::__anon1::__anon5
bmControls	uvcvideo.h	/^			__u8  *bmControls;$/;"	m	struct:uvc_entity::__anon1::__anon7
bmControlsType	uvcvideo.h	/^			__u8  *bmControlsType;$/;"	m	struct:uvc_entity::__anon1::__anon7
bmInfo	uvcvideo.h	/^	__u8 bmInfo;$/;"	m	struct:uvc_streaming_header
bmTransportModes	uvcvideo.h	/^			__u8  *bmTransportModes;$/;"	m	struct:uvc_entity::__anon1::__anon3
bmVideoStandards	uvcvideo.h	/^			__u8  bmVideoStandards;$/;"	m	struct:uvc_entity::__anon1::__anon5
bmaControls	uvcvideo.h	/^	__u8 *bmaControls;$/;"	m	struct:uvc_streaming_header
bpp	uvcvideo.h	/^	__u8 bpp;$/;"	m	struct:uvc_format
buf	uvcvideo.h	/^	struct vb2_v4l2_buffer buf;$/;"	m	struct:uvc_buffer	typeref:struct:uvc_buffer::vb2_v4l2_buffer
buf_used	uvcvideo.h	/^	unsigned int buf_used;$/;"	m	struct:uvc_video_queue
bulk	uvcvideo.h	/^	} bulk;$/;"	m	struct:uvc_streaming	typeref:struct:uvc_streaming::__anon8
bytesused	uvcvideo.h	/^	unsigned int bytesused;$/;"	m	struct:uvc_buffer
cached	uvcvideo.h	/^	     cached:1,$/;"	m	struct:uvc_control
camera	uvcvideo.h	/^		} camera;$/;"	m	union:uvc_entity::__anon1	typeref:struct:uvc_entity::__anon1::__anon2
caps	uvcvideo.h	/^	u32 caps;				\/* V4L2 chain-wide caps *\/$/;"	m	struct:uvc_video_chain
chain	uvcvideo.h	/^	struct list_head chain;		\/* Entity as part of a video device$/;"	m	struct:uvc_entity	typeref:struct:uvc_entity::list_head
chain	uvcvideo.h	/^	struct uvc_video_chain *chain;$/;"	m	struct:uvc_fh	typeref:struct:uvc_fh::uvc_video_chain
chain	uvcvideo.h	/^	struct uvc_video_chain *chain;$/;"	m	struct:uvc_streaming	typeref:struct:uvc_streaming::uvc_video_chain
chains	uvcvideo.h	/^	struct list_head chains;$/;"	m	struct:uvc_device	typeref:struct:uvc_device::list_head
clock	uvcvideo.h	/^	} clock;$/;"	m	struct:uvc_streaming	typeref:struct:uvc_streaming::uvc_clock
clock_frequency	uvcvideo.h	/^	__u32 clock_frequency;$/;"	m	struct:uvc_device
colorspace	uvcvideo.h	/^	__u8 colorspace;$/;"	m	struct:uvc_format
controls	uvcvideo.h	/^	struct uvc_control *controls;$/;"	m	struct:uvc_entity	typeref:struct:uvc_entity::uvc_control
count	uvc_debugfs.c	/^	size_t count;$/;"	m	struct:uvc_debugfs_buffer	file:
count	uvcvideo.h	/^		unsigned int count;$/;"	m	struct:uvc_streaming::uvc_clock
ctrl	uvcvideo.h	/^	struct uvc_streaming_control ctrl;$/;"	m	struct:uvc_streaming	typeref:struct:uvc_streaming::uvc_streaming_control
ctrl_mutex	uvcvideo.h	/^	struct mutex ctrl_mutex;		\/* Protects ctrl.info *\/$/;"	m	struct:uvc_video_chain	typeref:struct:uvc_video_chain::mutex
cur_format	uvcvideo.h	/^	struct uvc_format *cur_format;$/;"	m	struct:uvc_streaming	typeref:struct:uvc_streaming::uvc_format
cur_frame	uvcvideo.h	/^	struct uvc_frame *cur_frame;$/;"	m	struct:uvc_streaming	typeref:struct:uvc_streaming::uvc_frame
data	uvc_debugfs.c	/^	char data[UVC_DEBUGFS_BUF_SIZE];$/;"	m	struct:uvc_debugfs_buffer	file:
data	uvc_v4l2.c	/^	compat_caddr_t data;$/;"	m	struct:uvc_xu_control_query32	file:
data_type	uvc_v4l2.c	/^	__u32 data_type;$/;"	m	struct:uvc_xu_control_mapping32	file:
data_type	uvcvideo.h	/^	__u32 data_type;$/;"	m	struct:uvc_control_mapping
debugfs_dir	uvcvideo.h	/^	struct dentry *debugfs_dir;$/;"	m	struct:uvc_streaming	typeref:struct:uvc_streaming::dentry
decode	uvcvideo.h	/^	void (*decode) (struct urb *urb, struct uvc_streaming *video,$/;"	m	struct:uvc_streaming
def_format	uvcvideo.h	/^	struct uvc_format *def_format;$/;"	m	struct:uvc_streaming	typeref:struct:uvc_streaming::uvc_format
dev	uvcvideo.h	/^	struct uvc_device *dev;$/;"	m	struct:uvc_streaming	typeref:struct:uvc_streaming::uvc_device
dev	uvcvideo.h	/^	struct uvc_device *dev;$/;"	m	struct:uvc_video_chain	typeref:struct:uvc_video_chain::uvc_device
dev_sof	uvcvideo.h	/^			u16 dev_sof;$/;"	m	struct:uvc_streaming::uvc_clock::uvc_clock_sample
dev_stc	uvcvideo.h	/^			u32 dev_stc;$/;"	m	struct:uvc_streaming::uvc_clock::uvc_clock_sample
dirty	uvcvideo.h	/^	__u8 dirty:1,$/;"	m	struct:uvc_control
driver	uvcvideo.h	/^	struct usb_driver driver;$/;"	m	struct:uvc_driver	typeref:struct:uvc_driver::usb_driver
dwDefaultFrameInterval	uvcvideo.h	/^	__u32 dwDefaultFrameInterval;$/;"	m	struct:uvc_frame
dwFrameInterval	uvcvideo.h	/^	__u32 *dwFrameInterval;$/;"	m	struct:uvc_frame
dwMaxBitRate	uvcvideo.h	/^	__u32 dwMaxBitRate;$/;"	m	struct:uvc_frame
dwMaxVideoFrameBufferSize	uvcvideo.h	/^	__u32 dwMaxVideoFrameBufferSize;$/;"	m	struct:uvc_frame
dwMinBitRate	uvcvideo.h	/^	__u32 dwMinBitRate;$/;"	m	struct:uvc_frame
entities	uvcvideo.h	/^	struct list_head entities;		\/* All entities *\/$/;"	m	struct:uvc_video_chain	typeref:struct:uvc_video_chain::list_head
entities	uvcvideo.h	/^	struct list_head entities;$/;"	m	struct:uvc_device	typeref:struct:uvc_device::list_head
entity	uvc_v4l2.c	/^	__u8 entity[16];$/;"	m	struct:uvc_xu_control_mapping32	file:
entity	uvcvideo.h	/^	__u8 entity[16];$/;"	m	struct:uvc_control_info
entity	uvcvideo.h	/^	__u8 entity[16];$/;"	m	struct:uvc_control_mapping
entity	uvcvideo.h	/^	struct uvc_entity *entity;$/;"	m	struct:uvc_control	typeref:struct:uvc_control::uvc_entity
error	uvcvideo.h	/^	unsigned int error;$/;"	m	struct:uvc_buffer
ev_subs	uvcvideo.h	/^	struct list_head ev_subs;$/;"	m	struct:uvc_control_mapping	typeref:struct:uvc_control_mapping::list_head
exposure_auto_controls	uvc_ctrl.c	/^static struct uvc_menu_info exposure_auto_controls[] = {$/;"	v	typeref:struct:uvc_menu_info	file:
extension	uvcvideo.h	/^		} extension;$/;"	m	union:uvc_entity::__anon1	typeref:struct:uvc_entity::__anon1::__anon7
fcc	uvcvideo.h	/^	__u32 fcc;$/;"	m	struct:uvc_format
fcc	uvcvideo.h	/^	__u32 fcc;$/;"	m	struct:uvc_format_desc
first_data	uvcvideo.h	/^	unsigned int first_data;	\/* Index of the first non-empty packet *\/$/;"	m	struct:uvc_stats_frame
flags	uvcvideo.h	/^	__u32 flags;$/;"	m	struct:uvc_control_info
flags	uvcvideo.h	/^	__u32 flags;$/;"	m	struct:uvc_format
flags	uvcvideo.h	/^	unsigned int flags;$/;"	m	struct:uvc_entity
flags	uvcvideo.h	/^	unsigned int flags;$/;"	m	struct:uvc_video_queue
format	uvcvideo.h	/^	struct uvc_format *format;$/;"	m	struct:uvc_streaming	typeref:struct:uvc_streaming::uvc_format
frame	uvcvideo.h	/^		struct uvc_stats_frame frame;$/;"	m	struct:uvc_streaming::__anon9	typeref:struct:uvc_streaming::__anon9::uvc_stats_frame
frame	uvcvideo.h	/^	struct uvc_frame *frame;$/;"	m	struct:uvc_format	typeref:struct:uvc_format::uvc_frame
frozen	uvcvideo.h	/^	unsigned int frozen : 1;$/;"	m	struct:uvc_streaming
gcc-version.sh_gcc	.cache.mk	/^__cached_\/bin\/bash_.\/scripts\/gcc-version.sh_gcc := 0504$/;"	m
get	uvcvideo.h	/^	__s32 (*get) (struct uvc_control_mapping *mapping, __u8 query,$/;"	m	struct:uvc_control_mapping
guid	uvcvideo.h	/^	__u8 guid[16];$/;"	m	struct:uvc_format_desc
guidExtensionCode	uvcvideo.h	/^			__u8  guidExtensionCode[16];$/;"	m	struct:uvc_entity::__anon1::__anon7
has_early_pts	uvcvideo.h	/^	bool has_early_pts;		\/* Whether a PTS is present before the first non-empty packet *\/$/;"	m	struct:uvc_stats_frame
has_initial_pts	uvcvideo.h	/^	bool has_initial_pts;		\/* Whether the first non-empty packet has a PTS *\/$/;"	m	struct:uvc_stats_frame
head	uvcvideo.h	/^		unsigned int head;$/;"	m	struct:uvc_streaming::uvc_clock
header	uvcvideo.h	/^		__u8 header[256];$/;"	m	struct:uvc_streaming::__anon8
header	uvcvideo.h	/^	struct uvc_streaming_header header;$/;"	m	struct:uvc_streaming	typeref:struct:uvc_streaming::uvc_streaming_header
header_size	uvcvideo.h	/^		unsigned int header_size;$/;"	m	struct:uvc_streaming::__anon8
host_sof	uvcvideo.h	/^			u16 host_sof;$/;"	m	struct:uvc_streaming::uvc_clock::uvc_clock_sample
host_ts	uvcvideo.h	/^			struct timespec host_ts;$/;"	m	struct:uvc_streaming::uvc_clock::uvc_clock_sample	typeref:struct:uvc_streaming::uvc_clock::uvc_clock_sample::timespec
id	uvc_v4l2.c	/^	__u32 id;$/;"	m	struct:uvc_xu_control_mapping32	file:
id	uvcvideo.h	/^	__u32 id;$/;"	m	struct:uvc_control_mapping
id	uvcvideo.h	/^	__u8 id;$/;"	m	struct:uvc_entity
index	uvcvideo.h	/^	__u8 index;	\/* Bit index in bmControls *\/$/;"	m	struct:uvc_control_info
index	uvcvideo.h	/^	__u8 index;	\/* Used to match the uvc_control entry with a$/;"	m	struct:uvc_control
index	uvcvideo.h	/^	__u8 index;$/;"	m	struct:uvc_format
info	uvcvideo.h	/^	struct uvc_control_info info;$/;"	m	struct:uvc_control	typeref:struct:uvc_control::uvc_control_info
initialized	uvcvideo.h	/^	     initialized:1;$/;"	m	struct:uvc_control
input	uvcvideo.h	/^	struct input_dev *input;$/;"	m	struct:uvc_device	typeref:struct:uvc_device::input_dev
input_phys	uvcvideo.h	/^	char input_phys[64];$/;"	m	struct:uvc_device
int_ep	uvcvideo.h	/^	struct usb_host_endpoint *int_ep;$/;"	m	struct:uvc_device	typeref:struct:uvc_device::usb_host_endpoint
int_urb	uvcvideo.h	/^	struct urb *int_urb;$/;"	m	struct:uvc_device	typeref:struct:uvc_device::urb
intf	uvcvideo.h	/^	struct usb_interface *intf;$/;"	m	struct:uvc_device	typeref:struct:uvc_device::usb_interface
intf	uvcvideo.h	/^	struct usb_interface *intf;$/;"	m	struct:uvc_streaming	typeref:struct:uvc_streaming::usb_interface
intfnum	uvcvideo.h	/^	int intfnum;$/;"	m	struct:uvc_device
intfnum	uvcvideo.h	/^	int intfnum;$/;"	m	struct:uvc_streaming
irqlock	uvcvideo.h	/^	spinlock_t irqlock;			\/* Protects irqqueue *\/$/;"	m	struct:uvc_video_queue
irqqueue	uvcvideo.h	/^	struct list_head irqqueue;$/;"	m	struct:uvc_video_queue	typeref:struct:uvc_video_queue::list_head
isight_decode	uvc_isight.c	/^static int isight_decode(struct uvc_video_queue *queue, struct uvc_buffer *buf,$/;"	f	file:
last_fid	uvcvideo.h	/^	__u8 last_fid;$/;"	m	struct:uvc_streaming
last_pts_diff	uvcvideo.h	/^	unsigned int last_pts_diff;	\/* Index of the last PTS difference *\/$/;"	m	struct:uvc_stats_frame
last_sof	uvcvideo.h	/^		u16 last_sof;$/;"	m	struct:uvc_streaming::uvc_clock
length	uvcvideo.h	/^	unsigned int length;$/;"	m	struct:uvc_buffer
list	uvcvideo.h	/^	struct list_head list;		\/* Entity as part of a UVC device. *\/$/;"	m	struct:uvc_entity	typeref:struct:uvc_entity::list_head
list	uvcvideo.h	/^	struct list_head list;$/;"	m	struct:uvc_control_mapping	typeref:struct:uvc_control_mapping::list_head
list	uvcvideo.h	/^	struct list_head list;$/;"	m	struct:uvc_streaming	typeref:struct:uvc_streaming::list_head
list	uvcvideo.h	/^	struct list_head list;$/;"	m	struct:uvc_video_chain	typeref:struct:uvc_video_chain::list_head
loaded	uvcvideo.h	/^	     loaded:1,$/;"	m	struct:uvc_control
lock	uvcvideo.h	/^		spinlock_t lock;$/;"	m	struct:uvc_streaming::uvc_clock
lock	uvcvideo.h	/^	struct mutex lock;		\/* Protects users *\/$/;"	m	struct:uvc_device	typeref:struct:uvc_device::mutex
mappings	uvcvideo.h	/^	struct list_head mappings;$/;"	m	struct:uvc_control_info	typeref:struct:uvc_control_info::list_head
master_id	uvcvideo.h	/^	__u32 master_id;$/;"	m	struct:uvc_control_mapping
master_manual	uvcvideo.h	/^	__s32 master_manual;$/;"	m	struct:uvc_control_mapping
max_payload_size	uvcvideo.h	/^		__u32 max_payload_size;$/;"	m	struct:uvc_streaming::__anon8
max_sof	uvcvideo.h	/^	unsigned int max_sof;		\/* Maximum STC.SOF value *\/$/;"	m	struct:uvc_stats_stream
maxpsize	uvcvideo.h	/^	__u16 maxpsize;$/;"	m	struct:uvc_streaming
mdev	uvcvideo.h	/^	struct media_device mdev;$/;"	m	struct:uvc_device	typeref:struct:uvc_device::media_device
media	uvcvideo.h	/^		} media;$/;"	m	union:uvc_entity::__anon1	typeref:struct:uvc_entity::__anon1::__anon3
mem	uvcvideo.h	/^	void *mem;$/;"	m	struct:uvc_buffer
menu_count	uvc_v4l2.c	/^	__u32 menu_count;$/;"	m	struct:uvc_xu_control_mapping32	file:
menu_count	uvcvideo.h	/^	__u32 menu_count;$/;"	m	struct:uvc_control_mapping
menu_info	uvc_v4l2.c	/^	compat_caddr_t menu_info;$/;"	m	struct:uvc_xu_control_mapping32	file:
menu_info	uvcvideo.h	/^	struct uvc_menu_info *menu_info;$/;"	m	struct:uvc_control_mapping	typeref:struct:uvc_control_mapping::uvc_menu_info
min_sof	uvcvideo.h	/^	unsigned int min_sof;		\/* Minimum STC.SOF value *\/$/;"	m	struct:uvc_stats_stream
modified	uvcvideo.h	/^	     modified:1,$/;"	m	struct:uvc_control
mutex	uvcvideo.h	/^	struct mutex mutex;			\/* Protects queue *\/$/;"	m	struct:uvc_video_queue	typeref:struct:uvc_video_queue::mutex
mutex	uvcvideo.h	/^	struct mutex mutex;$/;"	m	struct:uvc_streaming	typeref:struct:uvc_streaming::mutex
name	uvc_v4l2.c	/^	__u8 name[32];$/;"	m	struct:uvc_xu_control_mapping32	file:
name	uvcvideo.h	/^	__u8 name[32];$/;"	m	struct:uvc_control_mapping
name	uvcvideo.h	/^	char *name;$/;"	m	struct:uvc_format_desc
name	uvcvideo.h	/^	char name[32];$/;"	m	struct:uvc_device
name	uvcvideo.h	/^	char name[32];$/;"	m	struct:uvc_format
name	uvcvideo.h	/^	char name[64];$/;"	m	struct:uvc_entity
nb_empty	uvcvideo.h	/^	unsigned int nb_empty;		\/* Number of empty packets *\/$/;"	m	struct:uvc_stats_frame
nb_empty	uvcvideo.h	/^	unsigned int nb_empty;		\/* Number of empty packets *\/$/;"	m	struct:uvc_stats_stream
nb_errors	uvcvideo.h	/^	unsigned int nb_errors;		\/* Number of packets with the error bit set *\/$/;"	m	struct:uvc_stats_frame
nb_errors	uvcvideo.h	/^	unsigned int nb_errors;		\/* Number of packets with the error bit set *\/$/;"	m	struct:uvc_stats_stream
nb_frames	uvcvideo.h	/^	unsigned int nb_frames;		\/* Number of frames *\/$/;"	m	struct:uvc_stats_stream
nb_invalid	uvcvideo.h	/^	unsigned int nb_invalid;	\/* Number of packets with an invalid header *\/$/;"	m	struct:uvc_stats_frame
nb_invalid	uvcvideo.h	/^	unsigned int nb_invalid;	\/* Number of packets with an invalid header *\/$/;"	m	struct:uvc_stats_stream
nb_packets	uvcvideo.h	/^	unsigned int nb_packets;	\/* Number of packets *\/$/;"	m	struct:uvc_stats_frame
nb_packets	uvcvideo.h	/^	unsigned int nb_packets;	\/* Number of packets *\/$/;"	m	struct:uvc_stats_stream
nb_pts	uvcvideo.h	/^	unsigned int nb_pts;		\/* Number of packets with a PTS timestamp *\/$/;"	m	struct:uvc_stats_frame
nb_pts_constant	uvcvideo.h	/^	unsigned int nb_pts_constant;	\/* Number of frames with constant PTS *\/$/;"	m	struct:uvc_stats_stream
nb_pts_diffs	uvcvideo.h	/^	unsigned int nb_pts_diffs;	\/* Number of PTS differences inside a frame *\/$/;"	m	struct:uvc_stats_frame
nb_pts_early	uvcvideo.h	/^	unsigned int nb_pts_early;	\/* Number of frames with early PTS *\/$/;"	m	struct:uvc_stats_stream
nb_pts_initial	uvcvideo.h	/^	unsigned int nb_pts_initial;	\/* Number of frames with initial PTS *\/$/;"	m	struct:uvc_stats_stream
nb_scr	uvcvideo.h	/^	unsigned int nb_scr;		\/* Number of packets with a SCR timestamp *\/$/;"	m	struct:uvc_stats_frame
nb_scr_count_ok	uvcvideo.h	/^	unsigned int nb_scr_count_ok;	\/* Number of frames with at least one SCR per non empty packet *\/$/;"	m	struct:uvc_stats_stream
nb_scr_diffs	uvcvideo.h	/^	unsigned int nb_scr_diffs;	\/* Number of SCR.STC differences inside a frame *\/$/;"	m	struct:uvc_stats_frame
nb_scr_diffs_ok	uvcvideo.h	/^	unsigned int nb_scr_diffs_ok;	\/* Number of frames with varying SCR.STC *\/$/;"	m	struct:uvc_stats_stream
ncontrols	uvcvideo.h	/^	unsigned int ncontrols;$/;"	m	struct:uvc_entity
nformats	uvcvideo.h	/^	unsigned int nformats;$/;"	m	struct:uvc_streaming
nframes	uvcvideo.h	/^	unsigned int nframes;$/;"	m	struct:uvc_format
nmappings	uvcvideo.h	/^	atomic_t nmappings;$/;"	m	struct:uvc_device
num_links	uvcvideo.h	/^	unsigned int num_links;$/;"	m	struct:uvc_entity
num_pads	uvcvideo.h	/^	unsigned int num_pads;$/;"	m	struct:uvc_entity
offset	uvc_v4l2.c	/^	__u8 offset;$/;"	m	struct:uvc_xu_control_mapping32	file:
offset	uvcvideo.h	/^	__u8 offset;$/;"	m	struct:uvc_control_mapping
output	uvcvideo.h	/^		} output;$/;"	m	union:uvc_entity::__anon1	typeref:struct:uvc_entity::__anon1::__anon4
pads	uvcvideo.h	/^	struct media_pad *pads;$/;"	m	struct:uvc_entity	typeref:struct:uvc_entity::media_pad
payload_size	uvcvideo.h	/^		__u32 payload_size;$/;"	m	struct:uvc_streaming::__anon8
power_line_frequency_controls	uvc_ctrl.c	/^static struct uvc_menu_info power_line_frequency_controls[] = {$/;"	v	typeref:struct:uvc_menu_info	file:
prio	uvcvideo.h	/^	struct v4l2_prio_state prio;		\/* V4L2 priority state *\/$/;"	m	struct:uvc_video_chain	typeref:struct:uvc_video_chain::v4l2_prio_state
processing	uvcvideo.h	/^		} processing;$/;"	m	union:uvc_entity::__anon1	typeref:struct:uvc_entity::__anon1::__anon5
processing	uvcvideo.h	/^	struct uvc_entity *processing;		\/* Processing unit *\/$/;"	m	struct:uvc_video_chain	typeref:struct:uvc_video_chain::uvc_entity
pts	uvcvideo.h	/^	u32 pts;			\/* PTS of the last packet *\/$/;"	m	struct:uvc_stats_frame
pts	uvcvideo.h	/^	u32 pts;$/;"	m	struct:uvc_buffer
query	uvc_v4l2.c	/^	__u8 query;$/;"	m	struct:uvc_xu_control_query32	file:
queue	uvcvideo.h	/^	struct list_head queue;$/;"	m	struct:uvc_buffer	typeref:struct:uvc_buffer::list_head
queue	uvcvideo.h	/^	struct uvc_video_queue queue;$/;"	m	struct:uvc_streaming	typeref:struct:uvc_streaming::uvc_video_queue
queue	uvcvideo.h	/^	struct vb2_queue queue;$/;"	m	struct:uvc_video_queue	typeref:struct:uvc_video_queue::vb2_queue
quirks	uvcvideo.h	/^	__u32 quirks;$/;"	m	struct:uvc_device
ref	uvcvideo.h	/^	struct kref ref;$/;"	m	struct:uvc_device	typeref:struct:uvc_device::kref
reserved	uvc_v4l2.c	/^	__u32 reserved[4];$/;"	m	struct:uvc_xu_control_mapping32	file:
samples	uvcvideo.h	/^		} *samples;$/;"	m	struct:uvc_streaming::uvc_clock	typeref:struct:uvc_streaming::uvc_clock::uvc_clock_sample
scr_sof	uvcvideo.h	/^	u16 scr_sof;			\/* SCR.SOF of the last packet *\/$/;"	m	struct:uvc_stats_frame
scr_sof	uvcvideo.h	/^	unsigned int scr_sof;		\/* STC.SOF of the last packet *\/$/;"	m	struct:uvc_stats_stream
scr_sof_count	uvcvideo.h	/^	unsigned int scr_sof_count;	\/* STC.SOF counter accumulated since stream start *\/$/;"	m	struct:uvc_stats_stream
scr_stc	uvcvideo.h	/^	u32 scr_stc;			\/* SCR.STC of the last packet *\/$/;"	m	struct:uvc_stats_frame
selector	uvc_v4l2.c	/^	__u8 selector;$/;"	m	struct:uvc_xu_control_mapping32	file:
selector	uvc_v4l2.c	/^	__u8 selector;$/;"	m	struct:uvc_xu_control_query32	file:
selector	uvcvideo.h	/^		} selector;$/;"	m	union:uvc_entity::__anon1	typeref:struct:uvc_entity::__anon1::__anon6
selector	uvcvideo.h	/^	__u8 selector;$/;"	m	struct:uvc_control_info
selector	uvcvideo.h	/^	__u8 selector;$/;"	m	struct:uvc_control_mapping
selector	uvcvideo.h	/^	struct uvc_entity *selector;		\/* Selector unit *\/$/;"	m	struct:uvc_video_chain	typeref:struct:uvc_video_chain::uvc_entity
sequence	uvcvideo.h	/^	__u32 sequence;$/;"	m	struct:uvc_streaming
set	uvcvideo.h	/^	void (*set) (struct uvc_control_mapping *mapping, __s32 value,$/;"	m	struct:uvc_control_mapping
size	uvc_v4l2.c	/^	__u16 size;$/;"	m	struct:uvc_xu_control_query32	file:
size	uvc_v4l2.c	/^	__u8 size;$/;"	m	struct:uvc_xu_control_mapping32	file:
size	uvcvideo.h	/^		unsigned int size;$/;"	m	struct:uvc_streaming::uvc_clock
size	uvcvideo.h	/^	__u16 size;$/;"	m	struct:uvc_control_info
size	uvcvideo.h	/^	__u8 size;$/;"	m	struct:uvc_control_mapping
size	uvcvideo.h	/^	unsigned int size;		\/* Number of bytes captured *\/$/;"	m	struct:uvc_stats_frame
skip_payload	uvcvideo.h	/^		int skip_payload;$/;"	m	struct:uvc_streaming::__anon8
slave_ids	uvcvideo.h	/^	__u32 slave_ids[2];$/;"	m	struct:uvc_control_mapping
sof_offset	uvcvideo.h	/^		u16 sof_offset;$/;"	m	struct:uvc_streaming::uvc_clock
start_ts	uvcvideo.h	/^	struct timespec start_ts;	\/* Stream start timestamp *\/$/;"	m	struct:uvc_stats_stream	typeref:struct:uvc_stats_stream::timespec
state	uvcvideo.h	/^	enum uvc_buffer_state state;$/;"	m	struct:uvc_buffer	typeref:enum:uvc_buffer::uvc_buffer_state
state	uvcvideo.h	/^	enum uvc_handle_state state;$/;"	m	struct:uvc_fh	typeref:enum:uvc_fh::uvc_handle_state
stats	uvcvideo.h	/^	} stats;$/;"	m	struct:uvc_streaming	typeref:struct:uvc_streaming::__anon9
status	uvcvideo.h	/^	__u8 *status;$/;"	m	struct:uvc_device
stop_ts	uvcvideo.h	/^	struct timespec stop_ts;	\/* Stream stop timestamp *\/$/;"	m	struct:uvc_stats_stream	typeref:struct:uvc_stats_stream::timespec
stream	uvcvideo.h	/^		struct uvc_stats_stream stream;$/;"	m	struct:uvc_streaming::__anon9	typeref:struct:uvc_streaming::__anon9::uvc_stats_stream
stream	uvcvideo.h	/^	struct uvc_streaming *stream;$/;"	m	struct:uvc_fh	typeref:struct:uvc_fh::uvc_streaming
streams	uvcvideo.h	/^	struct list_head streams;$/;"	m	struct:uvc_device	typeref:struct:uvc_device::list_head
subdev	uvcvideo.h	/^	struct v4l2_subdev subdev;$/;"	m	struct:uvc_entity	typeref:struct:uvc_entity::v4l2_subdev
type	uvcvideo.h	/^	__u16 type;$/;"	m	struct:uvc_entity
type	uvcvideo.h	/^	__u8 type;$/;"	m	struct:uvc_format
type	uvcvideo.h	/^	enum v4l2_buf_type type;$/;"	m	struct:uvc_streaming	typeref:enum:uvc_streaming::v4l2_buf_type
udev	uvcvideo.h	/^	struct usb_device *udev;$/;"	m	struct:uvc_device	typeref:struct:uvc_device::usb_device
unit	uvc_v4l2.c	/^	__u8 unit;$/;"	m	struct:uvc_xu_control_query32	file:
urb	uvcvideo.h	/^	struct urb *urb[UVC_URBS];$/;"	m	struct:uvc_streaming	typeref:struct:uvc_streaming::urb
urb_buffer	uvcvideo.h	/^	char *urb_buffer[UVC_URBS];$/;"	m	struct:uvc_streaming
urb_dma	uvcvideo.h	/^	dma_addr_t urb_dma[UVC_URBS];$/;"	m	struct:uvc_streaming
urb_size	uvcvideo.h	/^	unsigned int urb_size;$/;"	m	struct:uvc_streaming
users	uvcvideo.h	/^	unsigned int users;$/;"	m	struct:uvc_device
uvc_acquire_privileges	uvc_v4l2.c	/^static int uvc_acquire_privileges(struct uvc_fh *handle)$/;"	f	file:
uvc_alloc_chain	uvc_driver.c	/^static struct uvc_video_chain *uvc_alloc_chain(struct uvc_device *dev)$/;"	f	file:
uvc_alloc_entity	uvc_driver.c	/^static struct uvc_entity *uvc_alloc_entity(u16 type, u8 id,$/;"	f	file:
uvc_alloc_urb_buffers	uvc_video.c	/^static int uvc_alloc_urb_buffers(struct uvc_streaming *stream,$/;"	f	file:
uvc_buffer	uvcvideo.h	/^struct uvc_buffer {$/;"	s
uvc_buffer_finish	uvc_queue.c	/^static void uvc_buffer_finish(struct vb2_buffer *vb)$/;"	f	file:
uvc_buffer_prepare	uvc_queue.c	/^static int uvc_buffer_prepare(struct vb2_buffer *vb)$/;"	f	file:
uvc_buffer_queue	uvc_queue.c	/^static void uvc_buffer_queue(struct vb2_buffer *vb)$/;"	f	file:
uvc_buffer_state	uvcvideo.h	/^enum uvc_buffer_state {$/;"	g
uvc_camera_guid	uvc_ctrl.c	/^static const __u8 uvc_camera_guid[16] = UVC_GUID_UVC_CAMERA;$/;"	v	file:
uvc_cleanup	uvc_driver.c	/^module_exit(uvc_cleanup);$/;"	v
uvc_cleanup	uvc_driver.c	/^static void __exit uvc_cleanup(void)$/;"	f	file:
uvc_clear_bit	uvc_ctrl.c	/^static inline void uvc_clear_bit(__u8 *data, int bit)$/;"	f	file:
uvc_clock	uvcvideo.h	/^	struct uvc_clock {$/;"	s	struct:uvc_streaming
uvc_clock_param	uvc_driver.c	/^unsigned int uvc_clock_param = CLOCK_MONOTONIC;$/;"	v
uvc_clock_param_get	uvc_driver.c	/^static int uvc_clock_param_get(char *buffer, const struct kernel_param *kp)$/;"	f	file:
uvc_clock_param_set	uvc_driver.c	/^static int uvc_clock_param_set(const char *val, const struct kernel_param *kp)$/;"	f	file:
uvc_clock_sample	uvcvideo.h	/^		struct uvc_clock_sample {$/;"	s	struct:uvc_streaming::uvc_clock
uvc_colorspace	uvc_driver.c	/^static __u32 uvc_colorspace(const __u8 primaries)$/;"	f	file:
uvc_commit_video	uvc_video.c	/^static int uvc_commit_video(struct uvc_streaming *stream,$/;"	f	file:
uvc_control	uvcvideo.h	/^struct uvc_control {$/;"	s
uvc_control_info	uvcvideo.h	/^struct uvc_control_info {$/;"	s
uvc_control_mapping	uvcvideo.h	/^struct uvc_control_mapping {$/;"	s
uvc_create_buffers	uvc_queue.c	/^int uvc_create_buffers(struct uvc_video_queue *queue,$/;"	f
uvc_ctrl_add_event	uvc_ctrl.c	/^static int uvc_ctrl_add_event(struct v4l2_subscribed_event *sev, unsigned elems)$/;"	f	file:
uvc_ctrl_add_info	uvc_ctrl.c	/^static int uvc_ctrl_add_info(struct uvc_device *dev, struct uvc_control *ctrl,$/;"	f	file:
uvc_ctrl_add_mapping	uvc_ctrl.c	/^int uvc_ctrl_add_mapping(struct uvc_video_chain *chain,$/;"	f
uvc_ctrl_begin	uvc_ctrl.c	/^int uvc_ctrl_begin(struct uvc_video_chain *chain)$/;"	f
uvc_ctrl_cleanup_device	uvc_ctrl.c	/^void uvc_ctrl_cleanup_device(struct uvc_device *dev)$/;"	f
uvc_ctrl_cleanup_mappings	uvc_ctrl.c	/^static void uvc_ctrl_cleanup_mappings(struct uvc_device *dev,$/;"	f	file:
uvc_ctrl_commit	uvcvideo.h	/^static inline int uvc_ctrl_commit(struct uvc_fh *handle,$/;"	f
uvc_ctrl_commit_entity	uvc_ctrl.c	/^static int uvc_ctrl_commit_entity(struct uvc_device *dev,$/;"	f	file:
uvc_ctrl_data	uvc_ctrl.c	/^static inline __u8 *uvc_ctrl_data(struct uvc_control *ctrl, int id)$/;"	f	file:
uvc_ctrl_del_event	uvc_ctrl.c	/^static void uvc_ctrl_del_event(struct v4l2_subscribed_event *sev)$/;"	f	file:
uvc_ctrl_fill_event	uvc_ctrl.c	/^static void uvc_ctrl_fill_event(struct uvc_video_chain *chain,$/;"	f	file:
uvc_ctrl_fill_xu_info	uvc_ctrl.c	/^static int uvc_ctrl_fill_xu_info(struct uvc_device *dev,$/;"	f	file:
uvc_ctrl_fixup_xu_info	uvc_ctrl.c	/^static void uvc_ctrl_fixup_xu_info(struct uvc_device *dev,$/;"	f	file:
uvc_ctrl_get	uvc_ctrl.c	/^int uvc_ctrl_get(struct uvc_video_chain *chain,$/;"	f
uvc_ctrl_get_rel_speed	uvc_ctrl.c	/^static __s32 uvc_ctrl_get_rel_speed(struct uvc_control_mapping *mapping,$/;"	f	file:
uvc_ctrl_get_zoom	uvc_ctrl.c	/^static __s32 uvc_ctrl_get_zoom(struct uvc_control_mapping *mapping,$/;"	f	file:
uvc_ctrl_init_ctrl	uvc_ctrl.c	/^static void uvc_ctrl_init_ctrl(struct uvc_device *dev, struct uvc_control *ctrl)$/;"	f	file:
uvc_ctrl_init_device	uvc_ctrl.c	/^int uvc_ctrl_init_device(struct uvc_device *dev)$/;"	f
uvc_ctrl_init_xu_ctrl	uvc_ctrl.c	/^static int uvc_ctrl_init_xu_ctrl(struct uvc_device *dev,$/;"	f	file:
uvc_ctrl_mappings	uvc_ctrl.c	/^static struct uvc_control_mapping uvc_ctrl_mappings[] = {$/;"	v	typeref:struct:uvc_control_mapping	file:
uvc_ctrl_populate_cache	uvc_ctrl.c	/^static int uvc_ctrl_populate_cache(struct uvc_video_chain *chain,$/;"	f	file:
uvc_ctrl_prune_entity	uvc_ctrl.c	/^static void uvc_ctrl_prune_entity(struct uvc_device *dev,$/;"	f	file:
uvc_ctrl_restore_values	uvc_ctrl.c	/^int uvc_ctrl_restore_values(struct uvc_device *dev)$/;"	f
uvc_ctrl_rollback	uvcvideo.h	/^static inline int uvc_ctrl_rollback(struct uvc_fh *handle)$/;"	f
uvc_ctrl_send_event	uvc_ctrl.c	/^static void uvc_ctrl_send_event(struct uvc_fh *handle,$/;"	f	file:
uvc_ctrl_send_events	uvc_ctrl.c	/^static void uvc_ctrl_send_events(struct uvc_fh *handle,$/;"	f	file:
uvc_ctrl_send_slave_event	uvc_ctrl.c	/^static void uvc_ctrl_send_slave_event(struct uvc_fh *handle,$/;"	f	file:
uvc_ctrl_set	uvc_ctrl.c	/^int uvc_ctrl_set(struct uvc_video_chain *chain,$/;"	f
uvc_ctrl_set_rel_speed	uvc_ctrl.c	/^static void uvc_ctrl_set_rel_speed(struct uvc_control_mapping *mapping,$/;"	f	file:
uvc_ctrl_set_zoom	uvc_ctrl.c	/^static void uvc_ctrl_set_zoom(struct uvc_control_mapping *mapping,$/;"	f	file:
uvc_ctrl_sub_ev_ops	uvc_ctrl.c	/^const struct v4l2_subscribed_event_ops uvc_ctrl_sub_ev_ops = {$/;"	v	typeref:struct:v4l2_subscribed_event_ops
uvc_ctrls	uvc_ctrl.c	/^static struct uvc_control_info uvc_ctrls[] = {$/;"	v	typeref:struct:uvc_control_info	file:
uvc_data	uvcvideo.h	/^	__u8 *uvc_data;$/;"	m	struct:uvc_control
uvc_debugfs_buffer	uvc_debugfs.c	/^struct uvc_debugfs_buffer {$/;"	s	file:
uvc_debugfs_cleanup	uvc_debugfs.c	/^void uvc_debugfs_cleanup(void)$/;"	f
uvc_debugfs_cleanup_stream	uvc_debugfs.c	/^void uvc_debugfs_cleanup_stream(struct uvc_streaming *stream)$/;"	f
uvc_debugfs_init	uvc_debugfs.c	/^void uvc_debugfs_init(void)$/;"	f
uvc_debugfs_init_stream	uvc_debugfs.c	/^void uvc_debugfs_init_stream(struct uvc_streaming *stream)$/;"	f
uvc_debugfs_root_dir	uvc_debugfs.c	/^static struct dentry *uvc_debugfs_root_dir;$/;"	v	typeref:struct:dentry	file:
uvc_debugfs_stats_fops	uvc_debugfs.c	/^static const struct file_operations uvc_debugfs_stats_fops = {$/;"	v	typeref:struct:file_operations	file:
uvc_debugfs_stats_open	uvc_debugfs.c	/^static int uvc_debugfs_stats_open(struct inode *inode, struct file *file)$/;"	f	file:
uvc_debugfs_stats_read	uvc_debugfs.c	/^static ssize_t uvc_debugfs_stats_read(struct file *file, char __user *user_buf,$/;"	f	file:
uvc_debugfs_stats_release	uvc_debugfs.c	/^static int uvc_debugfs_stats_release(struct inode *inode, struct file *file)$/;"	f	file:
uvc_delete	uvc_driver.c	/^static void uvc_delete(struct kref *kref)$/;"	f	file:
uvc_dequeue_buffer	uvc_queue.c	/^int uvc_dequeue_buffer(struct uvc_video_queue *queue, struct v4l2_buffer *buf,$/;"	f
uvc_device	uvcvideo.h	/^struct uvc_device {$/;"	s
uvc_disconnect	uvc_driver.c	/^static void uvc_disconnect(struct usb_interface *intf)$/;"	f	file:
uvc_dismiss_privileges	uvc_v4l2.c	/^static void uvc_dismiss_privileges(struct uvc_fh *handle)$/;"	f	file:
uvc_driver	uvc_driver.c	/^struct uvc_driver uvc_driver = {$/;"	v	typeref:struct:uvc_driver
uvc_driver	uvcvideo.h	/^struct uvc_driver {$/;"	s
uvc_endpoint_max_bpi	uvc_video.c	/^static unsigned int uvc_endpoint_max_bpi(struct usb_device *dev,$/;"	f	file:
uvc_entity	uvcvideo.h	/^struct uvc_entity {$/;"	s
uvc_entity_by_id	uvc_driver.c	/^struct uvc_entity *uvc_entity_by_id(struct uvc_device *dev, int id)$/;"	f
uvc_entity_by_reference	uvc_driver.c	/^static struct uvc_entity *uvc_entity_by_reference(struct uvc_device *dev,$/;"	f	file:
uvc_entity_match_guid	uvc_ctrl.c	/^static int uvc_entity_match_guid(const struct uvc_entity *entity,$/;"	f	file:
uvc_event_control	uvc_status.c	/^static void uvc_event_control(struct uvc_device *dev, __u8 *data, int len)$/;"	f	file:
uvc_event_streaming	uvc_status.c	/^static void uvc_event_streaming(struct uvc_device *dev, __u8 *data, int len)$/;"	f	file:
uvc_export_buffer	uvc_queue.c	/^int uvc_export_buffer(struct uvc_video_queue *queue,$/;"	f
uvc_fh	uvcvideo.h	/^struct uvc_fh {$/;"	s
uvc_find_control	uvc_ctrl.c	/^static struct uvc_control *uvc_find_control(struct uvc_video_chain *chain,$/;"	f	file:
uvc_find_endpoint	uvc_driver.c	/^struct usb_host_endpoint *uvc_find_endpoint(struct usb_host_interface *alts,$/;"	f
uvc_fixup_video_ctrl	uvc_video.c	/^static void uvc_fixup_video_ctrl(struct uvc_streaming *stream,$/;"	f	file:
uvc_fmts	uvc_driver.c	/^static struct uvc_format_desc uvc_fmts[] = {$/;"	v	typeref:struct:uvc_format_desc	file:
uvc_fops	uvc_v4l2.c	/^const struct v4l2_file_operations uvc_fops = {$/;"	v	typeref:struct:v4l2_file_operations
uvc_format	uvcvideo.h	/^struct uvc_format {$/;"	s
uvc_format_by_guid	uvc_driver.c	/^static struct uvc_format_desc *uvc_format_by_guid(const __u8 guid[16])$/;"	f	file:
uvc_format_desc	uvcvideo.h	/^struct uvc_format_desc {$/;"	s
uvc_fraction_to_interval	uvc_driver.c	/^uint32_t uvc_fraction_to_interval(uint32_t numerator, uint32_t denominator)$/;"	f
uvc_frame	uvcvideo.h	/^struct uvc_frame {$/;"	s
uvc_free_urb_buffers	uvc_video.c	/^static void uvc_free_urb_buffers(struct uvc_streaming *stream)$/;"	f	file:
uvc_get_le_value	uvc_ctrl.c	/^static __s32 uvc_get_le_value(struct uvc_control_mapping *mapping,$/;"	f	file:
uvc_get_video_ctrl	uvc_video.c	/^static int uvc_get_video_ctrl(struct uvc_streaming *stream,$/;"	f	file:
uvc_handle_state	uvcvideo.h	/^enum uvc_handle_state {$/;"	g
uvc_has_privileges	uvc_v4l2.c	/^static int uvc_has_privileges(struct uvc_fh *handle)$/;"	f	file:
uvc_hw_timestamps_param	uvc_driver.c	/^unsigned int uvc_hw_timestamps_param;$/;"	v
uvc_ids	uvc_driver.c	/^static const struct usb_device_id uvc_ids[] = {$/;"	v	typeref:struct:usb_device_id	file:
uvc_init	uvc_driver.c	/^module_init(uvc_init);$/;"	v
uvc_init	uvc_driver.c	/^static int __init uvc_init(void)$/;"	f	file:
uvc_init_video	uvc_video.c	/^static int uvc_init_video(struct uvc_streaming *stream, gfp_t gfp_flags)$/;"	f	file:
uvc_init_video_bulk	uvc_video.c	/^static int uvc_init_video_bulk(struct uvc_streaming *stream,$/;"	f	file:
uvc_init_video_isoc	uvc_video.c	/^static int uvc_init_video_isoc(struct uvc_streaming *stream,$/;"	f	file:
uvc_input_cleanup	uvc_status.c	/^static void uvc_input_cleanup(struct uvc_device *dev)$/;"	f	file:
uvc_input_cleanup	uvc_status.c	74;"	d	file:
uvc_input_init	uvc_status.c	/^static int uvc_input_init(struct uvc_device *dev)$/;"	f	file:
uvc_input_init	uvc_status.c	73;"	d	file:
uvc_input_report_key	uvc_status.c	/^static void uvc_input_report_key(struct uvc_device *dev, unsigned int code,$/;"	f	file:
uvc_input_report_key	uvc_status.c	75;"	d	file:
uvc_ioctl_create_bufs	uvc_v4l2.c	/^static int uvc_ioctl_create_bufs(struct file *file, void *fh,$/;"	f	file:
uvc_ioctl_ctrl_map	uvc_v4l2.c	/^static int uvc_ioctl_ctrl_map(struct uvc_video_chain *chain,$/;"	f	file:
uvc_ioctl_default	uvc_v4l2.c	/^static long uvc_ioctl_default(struct file *file, void *fh, bool valid_prio,$/;"	f	file:
uvc_ioctl_dqbuf	uvc_v4l2.c	/^static int uvc_ioctl_dqbuf(struct file *file, void *fh, struct v4l2_buffer *buf)$/;"	f	file:
uvc_ioctl_enum_fmt	uvc_v4l2.c	/^static int uvc_ioctl_enum_fmt(struct uvc_streaming *stream,$/;"	f	file:
uvc_ioctl_enum_fmt_vid_cap	uvc_v4l2.c	/^static int uvc_ioctl_enum_fmt_vid_cap(struct file *file, void *fh,$/;"	f	file:
uvc_ioctl_enum_fmt_vid_out	uvc_v4l2.c	/^static int uvc_ioctl_enum_fmt_vid_out(struct file *file, void *fh,$/;"	f	file:
uvc_ioctl_enum_frameintervals	uvc_v4l2.c	/^static int uvc_ioctl_enum_frameintervals(struct file *file, void *fh,$/;"	f	file:
uvc_ioctl_enum_framesizes	uvc_v4l2.c	/^static int uvc_ioctl_enum_framesizes(struct file *file, void *fh,$/;"	f	file:
uvc_ioctl_enum_input	uvc_v4l2.c	/^static int uvc_ioctl_enum_input(struct file *file, void *fh,$/;"	f	file:
uvc_ioctl_expbuf	uvc_v4l2.c	/^static int uvc_ioctl_expbuf(struct file *file, void *fh,$/;"	f	file:
uvc_ioctl_g_ctrl	uvc_v4l2.c	/^static int uvc_ioctl_g_ctrl(struct file *file, void *fh,$/;"	f	file:
uvc_ioctl_g_ext_ctrls	uvc_v4l2.c	/^static int uvc_ioctl_g_ext_ctrls(struct file *file, void *fh,$/;"	f	file:
uvc_ioctl_g_fmt_vid_cap	uvc_v4l2.c	/^static int uvc_ioctl_g_fmt_vid_cap(struct file *file, void *fh,$/;"	f	file:
uvc_ioctl_g_fmt_vid_out	uvc_v4l2.c	/^static int uvc_ioctl_g_fmt_vid_out(struct file *file, void *fh,$/;"	f	file:
uvc_ioctl_g_input	uvc_v4l2.c	/^static int uvc_ioctl_g_input(struct file *file, void *fh, unsigned int *input)$/;"	f	file:
uvc_ioctl_g_parm	uvc_v4l2.c	/^static int uvc_ioctl_g_parm(struct file *file, void *fh,$/;"	f	file:
uvc_ioctl_g_selection	uvc_v4l2.c	/^static int uvc_ioctl_g_selection(struct file *file, void *fh,$/;"	f	file:
uvc_ioctl_ops	uvc_v4l2.c	/^const struct v4l2_ioctl_ops uvc_ioctl_ops = {$/;"	v	typeref:struct:v4l2_ioctl_ops
uvc_ioctl_qbuf	uvc_v4l2.c	/^static int uvc_ioctl_qbuf(struct file *file, void *fh, struct v4l2_buffer *buf)$/;"	f	file:
uvc_ioctl_query_ext_ctrl	uvc_v4l2.c	/^static int uvc_ioctl_query_ext_ctrl(struct file *file, void *fh,$/;"	f	file:
uvc_ioctl_querybuf	uvc_v4l2.c	/^static int uvc_ioctl_querybuf(struct file *file, void *fh,$/;"	f	file:
uvc_ioctl_querycap	uvc_v4l2.c	/^static int uvc_ioctl_querycap(struct file *file, void *fh,$/;"	f	file:
uvc_ioctl_queryctrl	uvc_v4l2.c	/^static int uvc_ioctl_queryctrl(struct file *file, void *fh,$/;"	f	file:
uvc_ioctl_querymenu	uvc_v4l2.c	/^static int uvc_ioctl_querymenu(struct file *file, void *fh,$/;"	f	file:
uvc_ioctl_reqbufs	uvc_v4l2.c	/^static int uvc_ioctl_reqbufs(struct file *file, void *fh,$/;"	f	file:
uvc_ioctl_s_ctrl	uvc_v4l2.c	/^static int uvc_ioctl_s_ctrl(struct file *file, void *fh,$/;"	f	file:
uvc_ioctl_s_ext_ctrls	uvc_v4l2.c	/^static int uvc_ioctl_s_ext_ctrls(struct file *file, void *fh,$/;"	f	file:
uvc_ioctl_s_fmt_vid_cap	uvc_v4l2.c	/^static int uvc_ioctl_s_fmt_vid_cap(struct file *file, void *fh,$/;"	f	file:
uvc_ioctl_s_fmt_vid_out	uvc_v4l2.c	/^static int uvc_ioctl_s_fmt_vid_out(struct file *file, void *fh,$/;"	f	file:
uvc_ioctl_s_input	uvc_v4l2.c	/^static int uvc_ioctl_s_input(struct file *file, void *fh, unsigned int input)$/;"	f	file:
uvc_ioctl_s_parm	uvc_v4l2.c	/^static int uvc_ioctl_s_parm(struct file *file, void *fh,$/;"	f	file:
uvc_ioctl_s_try_ext_ctrls	uvc_v4l2.c	/^static int uvc_ioctl_s_try_ext_ctrls(struct uvc_fh *handle,$/;"	f	file:
uvc_ioctl_streamoff	uvc_v4l2.c	/^static int uvc_ioctl_streamoff(struct file *file, void *fh,$/;"	f	file:
uvc_ioctl_streamon	uvc_v4l2.c	/^static int uvc_ioctl_streamon(struct file *file, void *fh,$/;"	f	file:
uvc_ioctl_subscribe_event	uvc_v4l2.c	/^static int uvc_ioctl_subscribe_event(struct v4l2_fh *fh,$/;"	f	file:
uvc_ioctl_try_ext_ctrls	uvc_v4l2.c	/^static int uvc_ioctl_try_ext_ctrls(struct file *file, void *fh,$/;"	f	file:
uvc_ioctl_try_fmt_vid_cap	uvc_v4l2.c	/^static int uvc_ioctl_try_fmt_vid_cap(struct file *file, void *fh,$/;"	f	file:
uvc_ioctl_try_fmt_vid_out	uvc_v4l2.c	/^static int uvc_ioctl_try_fmt_vid_out(struct file *file, void *fh,$/;"	f	file:
uvc_mc_cleanup_entity	uvc_entity.c	/^void uvc_mc_cleanup_entity(struct uvc_entity *entity)$/;"	f
uvc_mc_create_links	uvc_entity.c	/^static int uvc_mc_create_links(struct uvc_video_chain *chain,$/;"	f	file:
uvc_mc_init_entity	uvc_entity.c	/^static int uvc_mc_init_entity(struct uvc_video_chain *chain,$/;"	f	file:
uvc_mc_register_entities	uvc_entity.c	/^int uvc_mc_register_entities(struct uvc_video_chain *chain)$/;"	f
uvc_media_transport_input_guid	uvc_ctrl.c	/^static const __u8 uvc_media_transport_input_guid[16] =$/;"	v	file:
uvc_no_drop_param	uvc_driver.c	/^unsigned int uvc_no_drop_param;$/;"	v
uvc_parse_control	uvc_driver.c	/^static int uvc_parse_control(struct uvc_device *dev)$/;"	f	file:
uvc_parse_format	uvc_driver.c	/^static int uvc_parse_format(struct uvc_device *dev,$/;"	f	file:
uvc_parse_standard_control	uvc_driver.c	/^static int uvc_parse_standard_control(struct uvc_device *dev,$/;"	f	file:
uvc_parse_streaming	uvc_driver.c	/^static int uvc_parse_streaming(struct uvc_device *dev,$/;"	f	file:
uvc_parse_vendor_control	uvc_driver.c	/^static int uvc_parse_vendor_control(struct uvc_device *dev,$/;"	f	file:
uvc_print_chain	uvc_driver.c	/^static const char *uvc_print_chain(struct uvc_video_chain *chain)$/;"	f	file:
uvc_print_terms	uvc_driver.c	/^static unsigned int uvc_print_terms(struct list_head *terms, u16 dir,$/;"	f	file:
uvc_printk	uvcvideo.h	644;"	d
uvc_probe	uvc_driver.c	/^static int uvc_probe(struct usb_interface *intf,$/;"	f	file:
uvc_probe_video	uvc_video.c	/^int uvc_probe_video(struct uvc_streaming *stream,$/;"	f
uvc_processing_guid	uvc_ctrl.c	/^static const __u8 uvc_processing_guid[16] = UVC_GUID_UVC_PROCESSING;$/;"	v	file:
uvc_query_buffer	uvc_queue.c	/^int uvc_query_buffer(struct uvc_video_queue *queue, struct v4l2_buffer *buf)$/;"	f
uvc_query_ctrl	uvc_video.c	/^int uvc_query_ctrl(struct uvc_device *dev, __u8 query, __u8 unit,$/;"	f
uvc_query_name	uvc_video.c	/^static const char *uvc_query_name(__u8 query)$/;"	f	file:
uvc_query_v4l2_ctrl	uvc_ctrl.c	/^int uvc_query_v4l2_ctrl(struct uvc_video_chain *chain,$/;"	f
uvc_query_v4l2_menu	uvc_ctrl.c	/^int uvc_query_v4l2_menu(struct uvc_video_chain *chain,$/;"	f
uvc_queue_allocated	uvc_queue.c	/^int uvc_queue_allocated(struct uvc_video_queue *queue)$/;"	f
uvc_queue_buffer	uvc_queue.c	/^int uvc_queue_buffer(struct uvc_video_queue *queue, struct v4l2_buffer *buf)$/;"	f
uvc_queue_cancel	uvc_queue.c	/^void uvc_queue_cancel(struct uvc_video_queue *queue, int disconnect)$/;"	f
uvc_queue_get_unmapped_area	uvc_queue.c	/^unsigned long uvc_queue_get_unmapped_area(struct uvc_video_queue *queue,$/;"	f
uvc_queue_init	uvc_queue.c	/^int uvc_queue_init(struct uvc_video_queue *queue, enum v4l2_buf_type type,$/;"	f
uvc_queue_mmap	uvc_queue.c	/^int uvc_queue_mmap(struct uvc_video_queue *queue, struct vm_area_struct *vma)$/;"	f
uvc_queue_next_buffer	uvc_queue.c	/^struct uvc_buffer *uvc_queue_next_buffer(struct uvc_video_queue *queue,$/;"	f
uvc_queue_poll	uvc_queue.c	/^unsigned int uvc_queue_poll(struct uvc_video_queue *queue, struct file *file,$/;"	f
uvc_queue_qops	uvc_queue.c	/^static const struct vb2_ops uvc_queue_qops = {$/;"	v	typeref:struct:vb2_ops	file:
uvc_queue_release	uvc_queue.c	/^void uvc_queue_release(struct uvc_video_queue *queue)$/;"	f
uvc_queue_return_buffers	uvc_queue.c	/^static void uvc_queue_return_buffers(struct uvc_video_queue *queue,$/;"	f	file:
uvc_queue_setup	uvc_queue.c	/^static int uvc_queue_setup(struct vb2_queue *vq,$/;"	f	file:
uvc_queue_streaming	uvcvideo.h	/^static inline int uvc_queue_streaming(struct uvc_video_queue *queue)$/;"	f
uvc_queue_streamoff	uvc_queue.c	/^int uvc_queue_streamoff(struct uvc_video_queue *queue, enum v4l2_buf_type type)$/;"	f
uvc_queue_streamon	uvc_queue.c	/^int uvc_queue_streamon(struct uvc_video_queue *queue, enum v4l2_buf_type type)$/;"	f
uvc_queue_to_stream	uvc_queue.c	/^uvc_queue_to_stream(struct uvc_video_queue *queue)$/;"	f	file:
uvc_quirks_param	uvc_driver.c	/^static unsigned int uvc_quirks_param = -1;$/;"	v	file:
uvc_register_chains	uvc_driver.c	/^static int uvc_register_chains(struct uvc_device *dev)$/;"	f	file:
uvc_register_terms	uvc_driver.c	/^static int uvc_register_terms(struct uvc_device *dev,$/;"	f	file:
uvc_register_video	uvc_driver.c	/^static int uvc_register_video(struct uvc_device *dev,$/;"	f	file:
uvc_release	uvc_driver.c	/^static void uvc_release(struct video_device *vdev)$/;"	f	file:
uvc_request_buffers	uvc_queue.c	/^int uvc_request_buffers(struct uvc_video_queue *queue,$/;"	f
uvc_reset_resume	uvc_driver.c	/^static int uvc_reset_resume(struct usb_interface *intf)$/;"	f	file:
uvc_resume	uvc_driver.c	/^static int uvc_resume(struct usb_interface *intf)$/;"	f	file:
uvc_scan_chain	uvc_driver.c	/^static int uvc_scan_chain(struct uvc_video_chain *chain,$/;"	f	file:
uvc_scan_chain_backward	uvc_driver.c	/^static int uvc_scan_chain_backward(struct uvc_video_chain *chain,$/;"	f	file:
uvc_scan_chain_entity	uvc_driver.c	/^static int uvc_scan_chain_entity(struct uvc_video_chain *chain,$/;"	f	file:
uvc_scan_chain_forward	uvc_driver.c	/^static int uvc_scan_chain_forward(struct uvc_video_chain *chain,$/;"	f	file:
uvc_scan_device	uvc_driver.c	/^static int uvc_scan_device(struct uvc_device *dev)$/;"	f	file:
uvc_scan_fallback	uvc_driver.c	/^static int uvc_scan_fallback(struct uvc_device *dev)$/;"	f	file:
uvc_set_le_value	uvc_ctrl.c	/^static void uvc_set_le_value(struct uvc_control_mapping *mapping,$/;"	f	file:
uvc_set_video_ctrl	uvc_video.c	/^static int uvc_set_video_ctrl(struct uvc_streaming *stream,$/;"	f	file:
uvc_simplify_fraction	uvc_driver.c	/^void uvc_simplify_fraction(uint32_t *numerator, uint32_t *denominator,$/;"	f
uvc_start_streaming	uvc_queue.c	/^static int uvc_start_streaming(struct vb2_queue *vq, unsigned int count)$/;"	f	file:
uvc_stats_frame	uvcvideo.h	/^struct uvc_stats_frame {$/;"	s
uvc_stats_stream	uvcvideo.h	/^struct uvc_stats_stream {$/;"	s
uvc_status_cleanup	uvc_status.c	/^void uvc_status_cleanup(struct uvc_device *dev)$/;"	f
uvc_status_complete	uvc_status.c	/^static void uvc_status_complete(struct urb *urb)$/;"	f	file:
uvc_status_init	uvc_status.c	/^int uvc_status_init(struct uvc_device *dev)$/;"	f
uvc_status_start	uvc_status.c	/^int uvc_status_start(struct uvc_device *dev, gfp_t flags)$/;"	f
uvc_status_stop	uvc_status.c	/^void uvc_status_stop(struct uvc_device *dev)$/;"	f
uvc_stop_streaming	uvc_queue.c	/^static void uvc_stop_streaming(struct vb2_queue *vq)$/;"	f	file:
uvc_stream_by_id	uvc_driver.c	/^static struct uvc_streaming *uvc_stream_by_id(struct uvc_device *dev, int id)$/;"	f	file:
uvc_streaming	uvcvideo.h	/^struct uvc_streaming {$/;"	s
uvc_streaming_header	uvcvideo.h	/^struct uvc_streaming_header {$/;"	s
uvc_subdev_ops	uvc_entity.c	/^static const struct v4l2_subdev_ops uvc_subdev_ops = {$/;"	v	typeref:struct:v4l2_subdev_ops	file:
uvc_suspend	uvc_driver.c	/^static int uvc_suspend(struct usb_interface *intf, pm_message_t message)$/;"	f	file:
uvc_test_bit	uvc_ctrl.c	/^static inline int uvc_test_bit(const __u8 *data, int bit)$/;"	f	file:
uvc_timeout_param	uvc_driver.c	/^unsigned int uvc_timeout_param = UVC_CTRL_STREAMING_TIMEOUT;$/;"	v
uvc_trace	uvcvideo.h	632;"	d
uvc_trace_param	uvc_driver.c	/^unsigned int uvc_trace_param;$/;"	v
uvc_try_frame_interval	uvc_v4l2.c	/^static __u32 uvc_try_frame_interval(struct uvc_frame *frame, __u32 interval)$/;"	f	file:
uvc_uninit_video	uvc_video.c	/^static void uvc_uninit_video(struct uvc_streaming *stream, int free_buffers)$/;"	f	file:
uvc_unregister_video	uvc_driver.c	/^static void uvc_unregister_video(struct uvc_device *dev)$/;"	f	file:
uvc_v4l2_compat_ioctl32	uvc_v4l2.c	/^static long uvc_v4l2_compat_ioctl32(struct file *file,$/;"	f	file:
uvc_v4l2_get_bytesperline	uvc_v4l2.c	/^static __u32 uvc_v4l2_get_bytesperline(const struct uvc_format *format,$/;"	f	file:
uvc_v4l2_get_format	uvc_v4l2.c	/^static int uvc_v4l2_get_format(struct uvc_streaming *stream,$/;"	f	file:
uvc_v4l2_get_streamparm	uvc_v4l2.c	/^static int uvc_v4l2_get_streamparm(struct uvc_streaming *stream,$/;"	f	file:
uvc_v4l2_get_unmapped_area	uvc_v4l2.c	/^static unsigned long uvc_v4l2_get_unmapped_area(struct file *file,$/;"	f	file:
uvc_v4l2_get_xu_mapping	uvc_v4l2.c	/^static int uvc_v4l2_get_xu_mapping(struct uvc_xu_control_mapping *kp,$/;"	f	file:
uvc_v4l2_get_xu_query	uvc_v4l2.c	/^static int uvc_v4l2_get_xu_query(struct uvc_xu_control_query *kp,$/;"	f	file:
uvc_v4l2_mmap	uvc_v4l2.c	/^static int uvc_v4l2_mmap(struct file *file, struct vm_area_struct *vma)$/;"	f	file:
uvc_v4l2_open	uvc_v4l2.c	/^static int uvc_v4l2_open(struct file *file)$/;"	f	file:
uvc_v4l2_poll	uvc_v4l2.c	/^static unsigned int uvc_v4l2_poll(struct file *file, poll_table *wait)$/;"	f	file:
uvc_v4l2_put_xu_mapping	uvc_v4l2.c	/^static int uvc_v4l2_put_xu_mapping(const struct uvc_xu_control_mapping *kp,$/;"	f	file:
uvc_v4l2_put_xu_query	uvc_v4l2.c	/^static int uvc_v4l2_put_xu_query(const struct uvc_xu_control_query *kp,$/;"	f	file:
uvc_v4l2_read	uvc_v4l2.c	/^static ssize_t uvc_v4l2_read(struct file *file, char __user *data,$/;"	f	file:
uvc_v4l2_release	uvc_v4l2.c	/^static int uvc_v4l2_release(struct file *file)$/;"	f	file:
uvc_v4l2_set_format	uvc_v4l2.c	/^static int uvc_v4l2_set_format(struct uvc_streaming *stream,$/;"	f	file:
uvc_v4l2_set_streamparm	uvc_v4l2.c	/^static int uvc_v4l2_set_streamparm(struct uvc_streaming *stream,$/;"	f	file:
uvc_v4l2_try_format	uvc_v4l2.c	/^static int uvc_v4l2_try_format(struct uvc_streaming *stream,$/;"	f	file:
uvc_vbuf_to_buffer	uvc_queue.c	/^static inline struct uvc_buffer *uvc_vbuf_to_buffer(struct vb2_v4l2_buffer *buf)$/;"	f	file:
uvc_version	uvcvideo.h	/^	__u16 uvc_version;$/;"	m	struct:uvc_device
uvc_video_chain	uvcvideo.h	/^struct uvc_video_chain {$/;"	s
uvc_video_clock_cleanup	uvc_video.c	/^static void uvc_video_clock_cleanup(struct uvc_streaming *stream)$/;"	f	file:
uvc_video_clock_decode	uvc_video.c	/^uvc_video_clock_decode(struct uvc_streaming *stream, struct uvc_buffer *buf,$/;"	f	file:
uvc_video_clock_host_sof	uvc_video.c	/^static u16 uvc_video_clock_host_sof(const struct uvc_clock_sample *sample)$/;"	f	file:
uvc_video_clock_init	uvc_video.c	/^static int uvc_video_clock_init(struct uvc_streaming *stream)$/;"	f	file:
uvc_video_clock_reset	uvc_video.c	/^static void uvc_video_clock_reset(struct uvc_streaming *stream)$/;"	f	file:
uvc_video_clock_update	uvc_video.c	/^void uvc_video_clock_update(struct uvc_streaming *stream,$/;"	f
uvc_video_complete	uvc_video.c	/^static void uvc_video_complete(struct urb *urb)$/;"	f	file:
uvc_video_decode_bulk	uvc_video.c	/^static void uvc_video_decode_bulk(struct urb *urb, struct uvc_streaming *stream,$/;"	f	file:
uvc_video_decode_data	uvc_video.c	/^static void uvc_video_decode_data(struct uvc_streaming *stream,$/;"	f	file:
uvc_video_decode_end	uvc_video.c	/^static void uvc_video_decode_end(struct uvc_streaming *stream,$/;"	f	file:
uvc_video_decode_isight	uvc_isight.c	/^void uvc_video_decode_isight(struct urb *urb, struct uvc_streaming *stream,$/;"	f
uvc_video_decode_isoc	uvc_video.c	/^static void uvc_video_decode_isoc(struct urb *urb, struct uvc_streaming *stream,$/;"	f	file:
uvc_video_decode_start	uvc_video.c	/^static int uvc_video_decode_start(struct uvc_streaming *stream,$/;"	f	file:
uvc_video_enable	uvc_video.c	/^int uvc_video_enable(struct uvc_streaming *stream, int enable)$/;"	f
uvc_video_encode_bulk	uvc_video.c	/^static void uvc_video_encode_bulk(struct urb *urb, struct uvc_streaming *stream,$/;"	f	file:
uvc_video_encode_data	uvc_video.c	/^static int uvc_video_encode_data(struct uvc_streaming *stream,$/;"	f	file:
uvc_video_encode_header	uvc_video.c	/^static int uvc_video_encode_header(struct uvc_streaming *stream,$/;"	f	file:
uvc_video_get_ts	uvc_video.c	/^static inline void uvc_video_get_ts(struct timespec *ts)$/;"	f	file:
uvc_video_init	uvc_video.c	/^int uvc_video_init(struct uvc_streaming *stream)$/;"	f
uvc_video_queue	uvcvideo.h	/^struct uvc_video_queue {$/;"	s
uvc_video_resume	uvc_video.c	/^int uvc_video_resume(struct uvc_streaming *stream, int reset)$/;"	f
uvc_video_stats_decode	uvc_video.c	/^static void uvc_video_stats_decode(struct uvc_streaming *stream,$/;"	f	file:
uvc_video_stats_dump	uvc_video.c	/^size_t uvc_video_stats_dump(struct uvc_streaming *stream, char *buf,$/;"	f
uvc_video_stats_start	uvc_video.c	/^static void uvc_video_stats_start(struct uvc_streaming *stream)$/;"	f	file:
uvc_video_stats_stop	uvc_video.c	/^static void uvc_video_stats_stop(struct uvc_streaming *stream)$/;"	f	file:
uvc_video_stats_update	uvc_video.c	/^static void uvc_video_stats_update(struct uvc_streaming *stream)$/;"	f	file:
uvc_video_suspend	uvc_video.c	/^int uvc_video_suspend(struct uvc_streaming *stream)$/;"	f
uvc_video_validate_buffer	uvc_video.c	/^static void uvc_video_validate_buffer(const struct uvc_streaming *stream,$/;"	f	file:
uvc_warn_once	uvcvideo.h	638;"	d
uvc_xu_control_mapping32	uvc_v4l2.c	/^struct uvc_xu_control_mapping32 {$/;"	s	file:
uvc_xu_control_query32	uvc_v4l2.c	/^struct uvc_xu_control_query32 {$/;"	s	file:
uvc_xu_ctrl_query	uvc_ctrl.c	/^int uvc_xu_ctrl_query(struct uvc_video_chain *chain,$/;"	f
uvcvideo-objs	Makefile	/^uvcvideo-objs  := uvc_driver.o uvc_queue.o uvc_v4l2.o uvc_video.o uvc_ctrl.o \\$/;"	m
v4l2_type	uvc_v4l2.c	/^	__u32 v4l2_type;$/;"	m	struct:uvc_xu_control_mapping32	file:
v4l2_type	uvcvideo.h	/^	enum v4l2_ctrl_type v4l2_type;$/;"	m	struct:uvc_control_mapping	typeref:enum:uvc_control_mapping::v4l2_ctrl_type
vdev	uvcvideo.h	/^	struct v4l2_device vdev;$/;"	m	struct:uvc_device	typeref:struct:uvc_device::v4l2_device
vdev	uvcvideo.h	/^	struct video_device *vdev;$/;"	m	struct:uvc_entity	typeref:struct:uvc_entity::video_device
vdev	uvcvideo.h	/^	struct video_device vdev;$/;"	m	struct:uvc_streaming	typeref:struct:uvc_streaming::video_device
vfh	uvcvideo.h	/^	struct v4l2_fh vfh;$/;"	m	struct:uvc_fh	typeref:struct:uvc_fh::v4l2_fh
wHeight	uvcvideo.h	/^	__u16 wHeight;$/;"	m	struct:uvc_frame
wMaxMultiplier	uvcvideo.h	/^			__u16 wMaxMultiplier;$/;"	m	struct:uvc_entity::__anon1::__anon5
wObjectiveFocalLengthMax	uvcvideo.h	/^			__u16 wObjectiveFocalLengthMax;$/;"	m	struct:uvc_entity::__anon1::__anon2
wObjectiveFocalLengthMin	uvcvideo.h	/^			__u16 wObjectiveFocalLengthMin;$/;"	m	struct:uvc_entity::__anon1::__anon2
wOcularFocalLength	uvcvideo.h	/^			__u16 wOcularFocalLength;$/;"	m	struct:uvc_entity::__anon1::__anon2
wWidth	uvcvideo.h	/^	__u16 wWidth;$/;"	m	struct:uvc_frame
warnings	uvcvideo.h	/^	unsigned long warnings;$/;"	m	struct:uvc_device
